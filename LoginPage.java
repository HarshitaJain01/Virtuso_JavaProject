/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package virtuso2;

import com.jtattoo.plaf.acryl.AcrylLookAndFeel;
import com.jtattoo.plaf.aero.AeroLookAndFeel;
import com.jtattoo.plaf.aluminium.AluminiumLookAndFeel;
import com.jtattoo.plaf.bernstein.BernsteinLookAndFeel;
import com.jtattoo.plaf.fast.FastLookAndFeel;
import com.jtattoo.plaf.graphite.GraphiteLookAndFeel;
import com.jtattoo.plaf.hifi.HiFiLookAndFeel;
import com.jtattoo.plaf.luna.LunaLookAndFeel;
import com.jtattoo.plaf.mcwin.McWinLookAndFeel;
import com.jtattoo.plaf.mint.MintLookAndFeel;
import com.jtattoo.plaf.smart.SmartLookAndFeel;
import java.awt.Graphics2D;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.LayoutManager;
import java.awt.RenderingHints;
import javax.swing.JPanel;
import java.awt.Color;
import java.awt.Toolkit;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.border.Border;
import javax.swing.BorderFactory;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

import java.sql.DriverManager;
import java.util.Properties;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import static javax.swing.WindowConstants.DISPOSE_ON_CLOSE;
import virtuso2.backend.JHistogramD;

/**
 *
 * @author sp111
 */
public class LoginPage extends javax.swing.JFrame {

    /**
     * Creates new form LoginPage
     */
    public LoginPage() {
        this.setDefaultCloseOperation(JFrame.HIDE_ON_CLOSE);
        initComponents();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jFrame1 = new javax.swing.JFrame();
        kGradientPanel2 = new keeptoo.KGradientPanel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jPasswordField1 = new javax.swing.JPasswordField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jCheckBox1 = new javax.swing.JCheckBox();
        jLabel14 = new javax.swing.JLabel();

        jFrame1.setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        jFrame1.setUndecorated(true);
        jFrame1.getContentPane().setLayout(null);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setPreferredSize(new java.awt.Dimension(510, 427));
        getContentPane().setLayout(null);

        kGradientPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        kGradientPanel2.setLayout(null);

        jLabel12.setIcon(new javax.swing.ImageIcon("E:\\Download\\image-editor-master\\Virtuso2\\src\\resource\\logo2.png")); // NOI18N
        kGradientPanel2.add(jLabel12);
        jLabel12.setBounds(40, 120, 350, 150);

        jLabel13.setFont(new java.awt.Font("Thailandesa", 0, 36)); // NOI18N
        jLabel13.setText("VIRTUSO");
        kGradientPanel2.add(jLabel13);
        jLabel13.setBounds(50, 240, 230, 60);

        jLabel15.setIcon(new javax.swing.ImageIcon("E:\\Download\\image-editor-master\\Virtuso2\\src\\resource\\Untitled-4.png")); // NOI18N
        jLabel15.setText("jLabel14");
        kGradientPanel2.add(jLabel15);
        jLabel15.setBounds(0, 0, 260, 360);

        getContentPane().add(kGradientPanel2);
        kGradientPanel2.setBounds(0, 0, 260, 470);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel1.setFont(new java.awt.Font("Fira Code SemiBold", 1, 15)); // NOI18N
        jLabel1.setText(" Login To Your Account");
        jLabel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("X");
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel2MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel2MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel2MouseExited(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("-");
        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel3MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel3MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel3MouseExited(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setText("+");
        jLabel5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel5MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel5MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel5MouseExited(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Fira Code SemiBold", 0, 11)); // NOI18N
        jLabel6.setText("EMAIL");

        jTextField1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextField1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField1FocusLost(evt);
            }
        });
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Fira Code SemiBold", 0, 11)); // NOI18N
        jLabel7.setText("PASSCODE");

        jPasswordField1.setText("jPasswordField1");
        jPasswordField1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jPasswordField1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jPasswordField1FocusLost(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(255, 0, 51));
        jButton1.setFont(new java.awt.Font("Fira Code SemiBold", 0, 11)); // NOI18N
        jButton1.setText("LOGIN");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton1MouseExited(evt);
            }
        });
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(51, 255, 204));
        jButton2.setFont(new java.awt.Font("Fira Code SemiBold", 0, 11)); // NOI18N
        jButton2.setText("CANCEL");
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton2MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton2MouseExited(evt);
            }
        });

        jCheckBox1.setFont(new java.awt.Font("Fira Code SemiBold", 0, 11)); // NOI18N
        jCheckBox1.setSelected(true);
        jCheckBox1.setText("Click Here To Create Account");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Thailandesa", 0, 18)); // NOI18N
        jLabel14.setText("Virtuous Programmers");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(jPasswordField1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 152, Short.MAX_VALUE)
                                        .addComponent(jTextField1, javax.swing.GroupLayout.Alignment.LEADING))
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7)
                                    .addComponent(jCheckBox1)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(60, 60, 60)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 13, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPasswordField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton2)
                .addGap(44, 44, 44)
                .addComponent(jCheckBox1)
                .addGap(18, 18, 18)
                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(45, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel2);
        jPanel2.setBounds(260, 0, 250, 470);

        pack();
    }// </editor-fold>                        

    private void jLabel2MouseClicked(java.awt.event.MouseEvent evt) {                                     
        System.exit(0);
    }                                    

    private void jLabel2MouseEntered(java.awt.event.MouseEvent evt) {                                     
        jLabel2.setForeground(new Color(255, 0, 51));
    }                                    

    private void jLabel2MouseExited(java.awt.event.MouseEvent evt) {                                    
        jLabel2.setForeground(new Color(0,0,0));
    }                                   

    private void jLabel3MouseClicked(java.awt.event.MouseEvent evt) {                                     
        this.setState(JFrame.ICONIFIED);
    }                                    

    private void jLabel3MouseEntered(java.awt.event.MouseEvent evt) {                                     
        jLabel3.setForeground(Color.GREEN);
    }                                    

    private void jLabel3MouseExited(java.awt.event.MouseEvent evt) {                                    
        jLabel3.setForeground(new Color(0,0,0));
    }                                   

    private void jLabel5MouseClicked(java.awt.event.MouseEvent evt) {                                     
        this.setState(JFrame.MAXIMIZED_BOTH);
    }                                    

    private void jLabel5MouseEntered(java.awt.event.MouseEvent evt) {                                     
        jLabel5.setForeground(Color.BLUE);
    }                                    

    private void jLabel5MouseExited(java.awt.event.MouseEvent evt) {                                    
        jLabel5.setForeground(new Color(0,0,0));
    }                                   

    private void jTextField1FocusGained(java.awt.event.FocusEvent evt) {                                        
        if(jTextField1.getText().trim().toLowerCase().equals("username"))
        {
            jTextField1.setText("");
            jTextField1.setForeground(Color.black);

        }
        Border jlabel_icon = BorderFactory.createMatteBorder(1, 1, 1, 1, Color.BLACK);
        jLabel6.setBorder(jlabel_icon);
    }                                       

    private void jTextField1FocusLost(java.awt.event.FocusEvent evt) {                                      
        if(jTextField1.getText().trim().equals("") ||
            jTextField1.getText().trim().toLowerCase().equals("username"))
        {
            jTextField1.setText("username");
            jTextField1.setForeground(new Color(153,153,153));
        }
        Border label_icons_border = BorderFactory.createMatteBorder(1, 1, 1, 1,Color.WHITE);
        jLabel6.setBorder(label_icons_border);

        // create a border with the color of the parent jpanel for the icons label to remove the move
    }                                     

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {                                            
        // TODO add your handling code here:
    }                                           

    private void jPasswordField1FocusGained(java.awt.event.FocusEvent evt) {                                            
        String pass = String.valueOf(jPasswordField1.getPassword());

        if(pass.trim().toLowerCase().equals("password"))
        {
            jPasswordField1.setText("");
            jPasswordField1.setForeground(Color.black);
        }

        // set a yellow border to the jlabel icon
        Border jlabel_icon = BorderFactory.createMatteBorder(1, 1, 1, 1, Color.BLACK);
        jLabel7.setBorder(jlabel_icon);
    }                                           

    private void jPasswordField1FocusLost(java.awt.event.FocusEvent evt) {                                          
        String pass = String.valueOf(jPasswordField1.getPassword());

        if(pass.trim().equals("") ||
            pass.trim().toLowerCase().equals("password"))
        {
            jPasswordField1.setText("password");
            jPasswordField1.setForeground(new Color(153,153,153));
        }

        // create a border with the color of the parent jpanel for the icons label to remove the move
        Border label_icons_border = BorderFactory.createMatteBorder(1, 1, 1, 1,Color.WHITE);
        jLabel7.setBorder(label_icons_border);
    }                                         

    private void jButton1MouseEntered(java.awt.event.MouseEvent evt) {                                      
        jButton1.setBackground(new Color(0,101,183));
    }                                     

    private void jButton1MouseExited(java.awt.event.MouseEvent evt) {                                     
        jButton1.setBackground(new Color(255, 0, 51));
    }                                    

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {                                         
    
 
        
           //Connect to database
        java.sql.Connection con = null;
        

        PreparedStatement pst;
        try {
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/mydb","root","");
             pst = con.prepareStatement("Select * from logindatabase where username=? and password=?");
             pst.setString(1,jTextField1.getText());
             pst.setString(2,jPasswordField1.getText());
             ResultSet rs = pst.executeQuery();
             if(rs.next()){
                 try {
             String[] cab = new String[14];
        cab[0] = "AcrylLook";
        cab[1] = "Aero";
        cab[2] = "Aluminium";
        cab[3] = "Bernstein";
        cab[4] = "Fast";
        cab[5] = "Graphite";
        cab[6] = "Hifi";
        cab[7] = "Luna";
        cab[8] = "McWin";
        cab[9] = "Mint";
        cab[10] = "Noire";
        cab[11] = "Smart";
        cab[12] = "Texture";
           
        File imagefile = new File("E:\\Download\\image-editor-master\\Virtuso2\\src\\resource\\select.png");
        
         BufferedImage bi = ImageIO.read(imagefile);
         int width2 = bi.getWidth();
         int height2 = bi.getHeight();
         
      
         Graphics2D g2d = (Graphics2D) bi.getGraphics();
          g2d.setRenderingHint(
          RenderingHints.KEY_ANTIALIASING,
          RenderingHints.VALUE_ANTIALIAS_ON);
          g2d.setRenderingHint(
           RenderingHints.KEY_TEXT_ANTIALIASING,
           RenderingHints.VALUE_TEXT_ANTIALIAS_ON);
           g2d.setRenderingHint(
           RenderingHints.KEY_FRACTIONALMETRICS,
           RenderingHints.VALUE_FRACTIONALMETRICS_ON);
   

         
        
         
         
         ImageIcon image = new ImageIcon(bi);
        
//         UIManager.setLookAndFeel("com.jtattoo.plaf.mcwin.McWinLookAndFeel");
       

       
       
         
         
        
       
        Object selectedCab = JOptionPane.showInputDialog(null, "CHOOSE THE THEME", "SELECT THEME  ", JOptionPane.QUESTION_MESSAGE,image, cab, "SUPERCAB");
         
        if (selectedCab.equals("Smart") ) {
            Properties props = new Properties();
               props.put("logoString", "VIRTUSO");
               props.put("centerWindowTitle", "on");
               props.put("macStyleWindowDecoration", "on");
               SmartLookAndFeel.setCurrentTheme(props);
             try {
                 UIManager.setLookAndFeel("com.jtattoo.plaf.smart.SmartLookAndFeel");
             } catch (ClassNotFoundException ex) {
                 Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
             } catch (InstantiationException ex) {
                 Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
             } catch (IllegalAccessException ex) {
                 Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
             } catch (UnsupportedLookAndFeelException ex) {
                 Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
             }
        }
         if (selectedCab.equals("AcrylLook") ) {
                Properties props = new Properties();
               props.put("logoString", "VIRTUSO");
               props.put("centerWindowTitle", "on");
                props.put("macStyleWindowDecoration", "on");
               AcrylLookAndFeel.setCurrentTheme(props);
             try {
                 UIManager.setLookAndFeel("com.jtattoo.plaf.acryl.AcrylLookAndFeel");
             } catch (ClassNotFoundException ex) {
                 Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
             } catch (InstantiationException ex) {
                 Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
             } catch (IllegalAccessException ex) {
                 Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
             } catch (UnsupportedLookAndFeelException ex) {
                 Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
             }
        }
         if (selectedCab.equals("Aero") ) {
                Properties props = new Properties();
               props.put("logoString", "VIRTUSO");
               props.put("centerWindowTitle", "on");
                props.put("macStyleWindowDecoration", "on");
               AeroLookAndFeel.setCurrentTheme(props);
             try {
                 UIManager.setLookAndFeel("com.jtattoo.plaf.aero.AeroLookAndFeel");
             } catch (ClassNotFoundException ex) {
                 Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
             } catch (InstantiationException ex) {
                 Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
             } catch (IllegalAccessException ex) {
                 Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
             } catch (UnsupportedLookAndFeelException ex) {
                 Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
             }
        }
         if (selectedCab.equals("Aluminium") ) {
                Properties props = new Properties();
               props.put("logoString", "VIRTUSO");
               props.put("centerWindowTitle", "on");
                props.put("macStyleWindowDecoration", "on");
               AluminiumLookAndFeel.setCurrentTheme(props);
             try {
                 UIManager.setLookAndFeel("com.jtattoo.plaf.aluminium.AluminiumLookAndFeel");
             } catch (ClassNotFoundException ex) {
                 Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
             } catch (InstantiationException ex) {
                 Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
             } catch (IllegalAccessException ex) {
                 Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
             } catch (UnsupportedLookAndFeelException ex) {
                 Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
             }
        }
         if (selectedCab.equals("Bernstein") ) {
                Properties props = new Properties();
               props.put("logoString", "VIRTUSO");
               props.put("centerWindowTitle", "on");
                props.put("macStyleWindowDecoration", "on");
               BernsteinLookAndFeel.setCurrentTheme(props);
             try {
                 UIManager.setLookAndFeel("com.jtattoo.plaf.bernstein.BernsteinLookAndFeel");
             } catch (ClassNotFoundException ex) {
                 Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
             } catch (InstantiationException ex) {
                 Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
             } catch (IllegalAccessException ex) {
                 Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
             } catch (UnsupportedLookAndFeelException ex) {
                 Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
             }
        }
         if (selectedCab.equals("Fast") ) {
                Properties props = new Properties();
               props.put("logoString", "VIRTUSO");
               props.put("centerWindowTitle", "on");
                props.put("macStyleWindowDecoration", "on");
               FastLookAndFeel.setCurrentTheme(props);
             try {
                 UIManager.setLookAndFeel("com.jtattoo.plaf.fast.FastLookAndFeel");
             } catch (ClassNotFoundException ex) {
                 Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
             } catch (InstantiationException ex) {
                 Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
             } catch (IllegalAccessException ex) {
                 Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
             } catch (UnsupportedLookAndFeelException ex) {
                 Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
             }
        }
         if (selectedCab.equals("Graphite") ) {
                Properties props = new Properties();
               props.put("logoString", "VIRTUSO");
               props.put("centerWindowTitle", "on");
                props.put("macStyleWindowDecoration", "on");
               GraphiteLookAndFeel.setCurrentTheme(props);
             try {
                 UIManager.setLookAndFeel("com.jtattoo.plaf.graphite.GraphiteLookAndFeel");
             } catch (ClassNotFoundException ex) {
                 Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
             } catch (InstantiationException ex) {
                 Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
             } catch (IllegalAccessException ex) {
                 Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
             } catch (UnsupportedLookAndFeelException ex) {
                 Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
             }
        }
         if (selectedCab.equals("Hifi") ) {
                Properties props = new Properties();
               props.put("logoString", "VIRTUSO");
               props.put("centerWindowTitle", "on");
                props.put("macStyleWindowDecoration", "on");
               HiFiLookAndFeel.setCurrentTheme(props);
             try {
                 UIManager.setLookAndFeel("com.jtattoo.plaf.hifi.HiFiLookAndFeel");
             } catch (ClassNotFoundException ex) {
                 Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
             } catch (InstantiationException ex) {
                 Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
             } catch (IllegalAccessException ex) {
                 Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
             } catch (UnsupportedLookAndFeelException ex) {
                 Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
             }
        }
         if (selectedCab.equals(" Luna") ) {
                Properties props = new Properties();
               props.put("logoString", "VIRTUSO");
               props.put("centerWindowTitle", "on");
                props.put("macStyleWindowDecoration", "on");
                LunaLookAndFeel.setCurrentTheme(props);
             try {
                 UIManager.setLookAndFeel("com.jtattoo.plaf.luna.LunaLookAndFeel");
             } catch (ClassNotFoundException ex) {
                 Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
             } catch (InstantiationException ex) {
                 Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
             } catch (IllegalAccessException ex) {
                 Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
             } catch (UnsupportedLookAndFeelException ex) {
                 Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
             }
        }
         if (selectedCab.equals("McWin") ) {
                Properties props = new Properties();
               props.put("logoString", "VIRTUSO");
               props.put("centerWindowTitle", "on");
                props.put("macStyleWindowDecoration", "on");
               McWinLookAndFeel.setCurrentTheme(props);
             try {
                 UIManager.setLookAndFeel("com.jtattoo.plaf.mcwin.McWinLookAndFeel");
             } catch (ClassNotFoundException ex) {
                 Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
             } catch (InstantiationException ex) {
                 Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
             } catch (IllegalAccessException ex) {
                 Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
             } catch (UnsupportedLookAndFeelException ex) {
                 Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
             }
        }
         if (selectedCab.equals("Mint") ) {
                Properties props = new Properties();
               props.put("logoString", "VIRTUSO");
               props.put("centerWindowTitle", "on");
                props.put("macStyleWindowDecoration", "on");
               MintLookAndFeel.setCurrentTheme(props);
             try {
                 UIManager.setLookAndFeel("com.jtattoo.plaf.mint.MintLookAndFeel");
             } catch (ClassNotFoundException ex) {
                 Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
             } catch (InstantiationException ex) {
                 Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
             } catch (IllegalAccessException ex) {
                 Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
             } catch (UnsupportedLookAndFeelException ex) {
                 Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
             }
        }
         if (selectedCab.equals("Texture") ) {
                Properties props = new Properties();
               props.put("logoString", "VIRTUSO");
               props.put("centerWindowTitle", "on");
                props.put("macStyleWindowDecoration", "on");
               MintLookAndFeel.setCurrentTheme(props);
             try {
                 UIManager.setLookAndFeel("com.jtattoo.plaf.texture.TextureLookAndFeel");
             } catch (ClassNotFoundException ex) {
                 Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
             } catch (InstantiationException ex) {
                 Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
             } catch (IllegalAccessException ex) {
                 Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
             } catch (UnsupportedLookAndFeelException ex) {
                 Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
             }
        }
         if (selectedCab.equals("Noire") ) {
                Properties props = new Properties();
               props.put("logoString", "VIRTUSO");
               props.put("centerWindowTitle", "on");
                props.put("macStyleWindowDecoration", "on");
                props.put("controlTextFont", "Montserrat Medium  14");
                props.put("userTextFont", "Montserrat Medium  14");
                props.put("menuTextFont", "Montserrat Medium  14");
                props.put("windowTitleFontt", "Montserrat Medium  14");
                props.put("subTextFont", "Montserrat Medium  14");
                
               MintLookAndFeel.setCurrentTheme(props);
             try {
                 UIManager.setLookAndFeel("com.jtattoo.plaf.noire.NoireLookAndFeel");
             } catch (ClassNotFoundException ex) {
                 Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
             } catch (InstantiationException ex) {
                 Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
             } catch (IllegalAccessException ex) {
                 Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
             } catch (UnsupportedLookAndFeelException ex) {
                 Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
             }
        }
             
             
             Dimension size = Toolkit.getDefaultToolkit().getScreenSize();
            int width = (int)size.getWidth();
            int height = (int)size.getHeight();
            Virtuso2 jfImageEditor;
            jfImageEditor = new Virtuso2(JFrame.EXIT_ON_CLOSE, width, height);
            
            
            
		jfImageEditor.setVisible(true);
		JHistogramD jHistogram = new JHistogramD(jfImageEditor);
                                             jHistogram.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
		
        } catch (IOException ex) {
            Logger.getLogger(Virtuso2.class.getName()).log(Level.SEVERE, null, ex);
        }
             }
             else{
                 JOptionPane.showMessageDialog(null,"Username and Password not Found");
                 jTextField1.setText("");
                 jPasswordField1.setText("");
             }
             
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null,e);
        }
        
    

    }                                        

    private void jButton2MouseEntered(java.awt.event.MouseEvent evt) {                                      
        jButton2.setBackground(new Color(0,101,183));
    }                                     

    private void jButton2MouseExited(java.awt.event.MouseEvent evt) {                                     
        jButton2.setBackground(new Color(51, 255, 204));
    }                                    

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {                                           
        RegisterForm rf = new RegisterForm();
        rf.setVisible(true);
        rf.pack();
        rf.setLocationRelativeTo(null);
        rf.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        this.dispose();
    }                                          

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LoginPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LoginPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LoginPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LoginPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LoginPage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JTextField jTextField1;
    private keeptoo.KGradientPanel kGradientPanel2;
    // End of variables declaration                   
}
